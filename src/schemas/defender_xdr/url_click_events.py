from sqlalchemy import Column, Integer, BigInteger, String, DateTime, Boolean  
from .base import Base

class UrlClickEvents(Base):  
    __tablename__ = 'UrlClickEvents'

    id = Column(
        Integer,
        primary_key=True,
        autoincrement=True  
    )

    Timestamp = Column(
        DateTime,
        nullable=False,
        comment="The date and time when the user clicked on the link"  
    )

    Url = Column(
        String(2083),
        comment="The full URL that was clicked on by the user"  
    )

    ActionType = Column(
        String(50),
        comment="Indicates whether the click was allowed or blocked by Safe Links or blocked due to a tenant policy, for instance, from Tenant Allow Block list"  
    )

    AccountUpn = Column(
        String(255),
        comment="User Principal Name of the account that clicked on the link"  
    )

    Workload = Column(
        String(50),
        comment="The application from which the user clicked on the link, with the values being Email, Office, and Teams"  
    )

    NetworkMessageId = Column(
        String(255),
        comment="The unique identifier for the email that contains the clicked link, generated by Microsoft 365"  
    )

    ThreatTypes = Column(
        String(255),
        comment="Verdict at the time of click, which tells whether the URL led to malware, phish or other threats"  
    )

    DetectionMethods = Column(
        String(255),
        comment="Detection technology that was used to identify the threat at the time of click"  
    )

    IPAddress = Column(
        String(45),
        comment="Public IP address of the device from which the user clicked on the link"  
    )

    IsClickedThrough = Column(
        Boolean,
        comment="Indicates whether the user was able to click through to the original URL (1) or not (0)"  
    )

    UrlChain = Column(
        String(255),
        comment="For scenarios involving redirections, it includes URLs present in the redirection chain"  
    )

    ReportId = Column(
        String(255),
        comment="The unique identifier for a click event. For clickthrough scenarios, report ID would have same value, and therefore it should be used to correlate a click event."  
    )
