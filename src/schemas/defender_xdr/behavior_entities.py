from sqlalchemy import Column, Integer, String, Boolean, DateTime, BigInteger
from .base import Base

class BehaviorEntities(Base):
    __tablename__ = 'BehaviorEntities'
    
    Timestamp = Column(
        DateTime,
        comment="Date and time when the record was generated"
    )
    BehaviorId = Column(
        String(255),
        primary_key=True,
        comment="Unique identifier for the behavior"
    )
    ActionType = Column(
        String(255),
        comment="Type of behavior"
    )
    Categories = Column(
        String(255),
        comment="Type of threat indicator or breach activity identified by the behavior"
    )
    ServiceSource = Column(
        String(255),
        comment="Product or service that identified the behavior"
    )
    DetectionSource = Column(
        String(255),
        comment="Detection technology or sensor that identified the notable component or activity"
    )
    DataSources = Column(
        String(255),
        comment="Products or services that provided information for the behavior"
    )
    EntityType = Column(
        String(255),
        comment="Type of object, such as a file, a process, a device, or a user"
    )
    EntityRole = Column(
        String(255),
        comment="Indicates whether the entity is impacted or merely related"
    )
    DetailedEntityRole = Column(
        String(255),
        comment="The roles of the entity in the behavior"
    )
    FileName = Column(
        String(255),
        comment="Name of the file that the behavior applies to"
    )
    FolderPath = Column(
        String(255),
        comment="Folder containing the file that the behavior applies to"
    )
    SHA1 = Column(
        String(255),
        comment="SHA-1 of the file that the behavior applies to"
    )
    SHA256 = Column(
        String(255),
        comment="SHA-256 of the file that the behavior applies to"
    )
    FileSize = Column(
        BigInteger,
        comment="Size, in bytes, of the file that the behavior applies to"
    )
    ThreatFamily = Column(
        String(255),
        comment="Malware family that the suspicious or malicious file or process has been classified under"
    )
    RemoteIP = Column(
        String(255),
        comment="IP address that was being connected to"
    )
    RemoteUrl = Column(
        String(255),
        comment="URL or fully qualified domain name (FQDN) that was being connected to"
    )
    AccountName = Column(
        String(255),
        comment="User name of the account"
    )
    AccountDomain = Column(
        String(255),
        comment="Domain of the account"
    )
    AccountSid = Column(
        String(255),
        comment="Security Identifier (SID) of the account"
    )
    AccountObjectId = Column(
        String(255),
        comment="Unique identifier for the account in Microsoft Entra ID"
    )
    AccountUpn = Column(
        String(255),
        comment="User principal name (UPN) of the account"
    )
    DeviceId = Column(
        String(255),
        comment="Unique identifier for the device in the service"
    )
    DeviceName = Column(
        String(255),
        comment="Fully qualified domain name (FQDN) of the device"
    )
    LocalIP = Column(
        String(255),
        comment="IP address assigned to the local device used during communication"
    )
    NetworkMessageId = Column(
        String(255),
        comment="Unique identifier for the email, generated by Office 365"
    )
    EmailSubject = Column(
        String(255),
        comment="Subject of the email"
    )
    EmailClusterId = Column(
        String(255),
        comment="Identifier for the group of similar emails clustered based on heuristic analysis of their contents"
    )
    Application = Column(
        String(255),
        comment="Application that performed the recorded action"
    )
    ApplicationId = Column(
        Integer,
        comment="Unique identifier for the application"
    )
    OAuthApplicationId = Column(
        String(255),
        comment="Unique identifier of the third-party OAuth application"
    )
    ProcessCommandLine = Column(
        String(255),
        comment="Command line used to create the new process"
    )
    RegistryKey = Column(
        String(255),
        comment="Registry key that the recorded action was applied to"
    )
    RegistryValueName = Column(
        String(255),
        comment="Name of the registry value that the recorded action was applied to"
    )
    RegistryValueData = Column(
        String(255),
        comment="Data of the registry value that the recorded action was applied to"
    )
    AdditionalFields = Column(
        String(255),
        comment="Additional information about the behavior"
    )
